package Exploit.org;

import java.io.File;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Objects;

public class WaveFX {
    private LinkedList<Track> trackList = new LinkedList<>();
    private LinkedList<Album> albumList = new LinkedList<>();

    public LinkedList<Track> getTrackList() {
        return trackList;
    }

    public LinkedList<Album> getAlbumList() {
        return albumList;
    }

    private LinkedList<Playlist> playlistsCollection = new LinkedList<>();

    public WaveFX() {
        this.extractPathAndCreateTracks();
        this.createAndStoreAlbums();
    }
    private boolean extractPathAndCreateTracks() {
        File[] directory = new File("src/Exploit/org/Trackstore/Music").listFiles();
        for (int i = 0; i < Objects.requireNonNull(directory).length; i++) {
            File file = directory[i];
            if (file.isFile()) {
                Track track = new Track(file.getPath());
                this.trackList.add(track);
            }
        }
        return true;
    }
    private boolean createAndStoreAlbums() {
        for (int i = 0; i < this.trackList.size(); i++) {
            Track track = this.trackList.get(i);
            ListIterator<Album> albumListIterator = this.albumList.listIterator();
            boolean isAddedToAlbum = false;
            while (albumListIterator.hasNext()) {
                if (albumListIterator.next().getAlbumName().equals(track.getTrackArtist())) {
                    albumListIterator.previous().addTrackToAlbum(track);
                    isAddedToAlbum = true;
                    break;
                }
            }
            if (!isAddedToAlbum) {
                Album album = new Album(track);
                albumListIterator.add(album);
            }
        }
        return true;
    }
}
